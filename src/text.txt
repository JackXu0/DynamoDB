// two types of request

1. Request to write - coordinator w1 to worker w2:
    On w2: version on w1 must be larger than version on w2:
        if true ->
            return true, update value and version on w2
        else
            return false, along with the version on w2

    On w1:
        if receive true ->
            pass
        else
            update its version to max(w2.version + 1, w1.version)
            broadcast again

t1, t2

t1.h > t2:
    find the corresponding left tree

t1.h < t2:
    enlarge t1, until height is the same


1. Add MD5 hash
2. Update storage
3. reconstruct merkle

Message Type ID:

    //TODO: Function to request synchronization (virtual_nodes_ring, worker)
    //TODO: Function to request synchronization (membership_changing_history)
    //TODO: Function to request synchronization (merkel_tree)
    //TODO: Function to request synchronization (storage)

    //TODO: Function to handle response (virtual_nodes_ring, worker_map) -- update merkel tree if necessary
    //TODO: Function to handle response (membership_changing_history)
    //TODO: Function to handle response (merkel_tree)
    //TODO: Function to handle response (storage)
